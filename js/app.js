// Generated by CoffeeScript 1.9.2
(function() {
  var _, app, bodyParser, configs, cookieParser, cors, express, fs, http, methodOverride, morgan, myUtil, path, request, util;

  _ = require('lodash');

  http = require('http');

  fs = require('fs');

  path = require('path');

  util = require('util');

  cors = require('cors');

  morgan = require('morgan');

  express = require('express');

  bodyParser = require('body-parser');

  cookieParser = require('cookie-parser');

  methodOverride = require('method-override');

  request = require('superagent');

  configs = require('konfig')();

  myUtil = require('./myUtil').myUtil;

  app = express();

  app.set('port', process.env.PORT || configs.app.PORT);

  app.use(cookieParser());

  app.use(bodyParser.json({
    limit: '50mb'
  }));

  app.use(bodyParser.urlencoded({
    extended: true,
    limit: '50mb'
  }));

  app.use(methodOverride());

  app.use(morgan('dev'));

  app.use(cors());

  app.get('/', function(req, res) {
    res.end('innn');
  });


  /*
  API
   */

  app.post('/api/downloadFromURL', function(req, res) {
    request.post('http://waifu2x.udp.jp/api').type('form').send({
      'url': req.body.url,
      'noise': req.body.noise - 0,
      'scale': req.body.scale - 0
    }).end(function(err, response) {
      if (err) {
        console.log('err = ', err);
        return;
      }
      console.log('res = ', response);
      console.log('=====');
      return res.json({
        body: response.body,
        type: response.type
      });
    });
    return;
  });

  http.createServer(app).listen(app.get('port'), function() {
    console.log('Express server listening on port ' + app.get('port'));
  });

}).call(this);
