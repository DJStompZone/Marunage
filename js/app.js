// Generated by CoffeeScript 1.9.2
(function() {
  var _, app, bodyParser, configs, cookieParser, cors, dirname, express, fs, http, imagesPath, methodOverride, morgan, myUtil, path, request, util;

  _ = require('lodash');

  http = require('http');

  fs = require('fs');

  path = require('path');

  util = require('util');

  cors = require('cors');

  morgan = require('morgan');

  express = require('express');

  bodyParser = require('body-parser');

  cookieParser = require('cookie-parser');

  methodOverride = require('method-override');

  request = require('superagent');

  configs = require('konfig')();

  myUtil = require('./myUtil').myUtil;

  dirname = path.resolve();

  imagesPath = dirname + '/images/';

  app = express();

  app.set('port', process.env.PORT || configs.app.PORT);

  app.use(cookieParser());

  app.use(bodyParser.json({
    limit: '50mb'
  }));

  app.use(bodyParser.urlencoded({
    extended: true,
    limit: '50mb'
  }));

  app.use(methodOverride());

  app.use(morgan('dev'));

  app.use(cors());

  app.get('/', function(req, res) {
    res.end('innn');
  });

  app.post('/api/downloadFromURL', function(req, res) {
    request.post('http://waifu2x.udp.jp/api').type('form').send({
      'url': req.body.url,
      'noise': req.body.noise - 0,
      'scale': req.body.scale - 0
    }).end(function(err, response) {
      if (err) {
        console.log('err = ', err);
        return;
      }
      console.log('res = ', response);
      console.log('=====');
      fs.writeFile("" + imagesPath + (Date.now()) + ".png", response.body, function(err) {
        return console.log(err);
      });
      return res.json({
        body: response.body,
        type: response.type
      });
    });
    return;
  });

  app.post('/api/download', function(req, res) {
    console.log(req.body);
    return myUtil.loadBase64Data(req.body.url).then(function(base64Data) {
      var buff, decodedImage;
      console.log('loda');
      decodedImage = new Buffer(base64Data, 'base64').toString('binary');
      buff = new Buffer(base64Data.replace(/^data:image\/(png|gif|jpeg);base64,/, ''), 'base64');
      console.log(typeof buff);
      fs.writeFile(imagesPath + "image_decoded.png", buff, function(err) {
        return console.log(err);
      });
      console.log(imagesPath + "image_decoded.png");
      request.post('http://waifu2x.udp.jp/api').type('form').set('Content-Type', 'multipart/form-data').field('noise', req.body.noise).field('scale', req.body.scale).attach('file', imagesPath + "image_decoded.png", 'a.png').end(function(err, response) {
        if (err) {
          console.log('err = ', err);
          return;
        }
        console.log('response = ', response);
        console.log('=====');
        return res.json({
          data: response
        });
      });
    });
  });

  http.createServer(app).listen(app.get('port'), function() {
    console.log('Express server listening on port ' + app.get('port'));
  });

}).call(this);
