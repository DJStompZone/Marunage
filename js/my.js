// Generated by CoffeeScript 1.9.2
(function() {
  var fs, my, request;

  fs = require('fs');

  request = require('request');

  my = function() {
    return {
      loadBase64Data: function(url) {
        return new Promise(function(resolve, reject) {
          return request({
            url: url,
            encoding: null
          }, function(err, res, body) {
            var base64prefix, image;
            if (!err && res.statusCode === 200) {
              base64prefix = 'data:' + res.headers['content-type'] + ';base64,';
              image = body.toString('base64');
              return resolve(base64prefix + image);
            } else {
              return reject(err);
            }
          });
        });
      },
      saveImage: function(url, opts) {
        return new Promise(function(resolve, reject) {
          var outputPath, ws;
          console.log(url, opts);
          outputPath = opts.targetPath + "/" + opts.filename;
          ws = fs.createWriteStream(opts.targetPath + "/" + opts.filename);
          request(url, opts.requestParams).pipe(ws);
          ws.on('finish', function() {
            return resolve(outputPath);
          });
          return ws.on('error', function(err) {
            ws.end();
            return reject(err);
          });
        });
      }
    };
  };

  exports.my = my();

}).call(this);
