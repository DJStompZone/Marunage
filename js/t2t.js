// Generated by CoffeeScript 1.9.2
(function() {
  (function() {
    var _, exception, myUtil, settings, t2t;
    _ = require('lodash');
    myUtil = require('./myUtil').myUtil;
    exception = require('./exception');
    settings = (process.env.NODE_ENV === 'production' ? require("./configs/production") : require("./configs/development")).settings;

    /*
     * Twitter -> Tumblr
     */
    t2t = {
      checkIllegalTweet: function(tweet) {
        var isRT, isUnofficialRT, linkUrl, rt_exclude_pattern, twitter_short_url_pattern;
        rt_exclude_pattern = /(RT)/g;
        twitter_short_url_pattern = /^[\s\S]*(http:\/\/t.co\/[\w]+)/;
        isRT = _.has(tweet, 'retweeted_status');
        if (isRT) {
          throw new exception.doneRetweetException;
        }
        if (!_.has(tweet, 'text')) {
          throw new exception.NoTextTweetException;
        }
        if (!_.has(tweet.entities, 'urls')) {
          throw new exception.TextOnlyTweetException;
        }
        if (!_.isEmpty(tweet.entities.urls)) {
          throw new exception.UrlException;
        }
        linkUrl = tweet.text.match(twitter_short_url_pattern);
        if (_.isNull(linkUrl)) {
          throw new exception.TextOnlyTweetException;
        }
        isUnofficialRT = rt_exclude_pattern.test(myUtil.twitter.get(tweet, 'text', isRT));
        if (isUnofficialRT) {
          throw new exception.isUnofficialRTException;
        }
      },
      splitTags: function(tweet) {
        var hasHash;
        hasHash = function(text) {
          return text.indexOf('#') === 0;
        };
        return tweet.text.split(' ').filter(hasHash);
      },
      replaceAll: function(text, beforeWord, afterWord) {
        return text.split(beforeWord).join(afterWord);
      },
      getMediaUrl: function(tweet) {
        return tweet.entities.media[0].media_url + ':orig';
      },
      getPicUrl: function(tweet) {
        return tweet.entities.media[0].display_url;
      },
      post: function(tweet) {
        var caption, source, tags;
        tags = this.replaceAll(tweet.text, ' ', ',');
        caption = this.getPicUrl(tweet);
        source = this.getMediaUrl(tweet);
        return settings.tumblr.post('/post', {
          type: 'photo',
          tags: tags,
          caption: caption,
          source: source
        }, function(err, json) {
          if (err) {
            console.log(err);
          }
          return console.log(json);
        });
      }
    };
    return exports.t2t = t2t;
  }).call(this);

}).call(this);
